# source "C:\Users\ERIK\Documents\University\DLP\Repo\DLP\Practica_04\small-input.txt"

	' * IntType operadorTernario (offset 0)
	' * IntType integer (offset 2)
	' * CharType  character (offset 4)
	' * RealType real (offset 5)
	' * IntType MATRIXSIZE (offset 9)
	' * ArrayType size: 10 matrix (offset 11)
	' * RecordType [body=[[RecordField [name=day, offset=0, type=IntType], RecordField [name=mounth, offset=2, type=IntType], RecordField [name=year, offset=4, type=IntType]]]] date (offset 11)
' Invocation to the main function
call main
halt
# line 35
setValue:
	' * Parameters
	' * IntType row (offset 21)
	' * IntType column (offset 19)
	' * IntType value (offset 17)
	' * Local variables
	enter	0
	' * Assignment
	pusha	0
	pusha	2
	loadi
	pushi	5
	gti
	pusha	2
	loadi
	pusha	5
	loadf
	storei
	' * Assignment
	pusha	11
	pushi	0
	addi
	pushi	9
	storei
	' * Assignment
	pusha	11
	pushi	2
	addi
	pushi	3
	storei
	' * Assignment
	pusha	11
	pushi	4
	addi
	pushi	2016
	storei
	' * Assignment
	pusha	4
	pusha	11
	pushi	0
	addi
	loadi
	i2b
	storeb
	' * If
	pusha	21
	loadi
	pushi	0
	gei
	pusha	21
	loadi
	pusha	9
	loadi
	lti
	and
	pusha	19
	loadi
	pushi	0
	gei
	and
	pusha	19
	loadi
	pusha	9
	loadi
	lti
	and
	jz	label0
	' * Assignment
	pusha	11
	pusha	21
	loadi
	pushi	0
	muli
	addi
	pusha	19
	loadi
	pushi	2
	muli
	addi
	pusha	17
	loadi
	storei
	jmp	label1
label0:
label1:
	ret	0, 0, 6
# line 48
getValue:
	' * Parameters
	' * IntType row (offset 25)
	' * IntType column (offset 23)
	' * Local variables
	enter	0
	' * If
	pusha	25
	loadi
	pushi	0
	lti
	pusha	25
	loadi
	pusha	9
	loadi
	gei
	or
	pusha	23
	loadi
	pushi	0
	lti
	pusha	23
	loadi
	pusha	9
	loadi
	gei
	and
	or
	jz	label2
	' * Return
	pushi	0
	pushi	1
	subi
	ret	2, 0, 4
	jmp	label3
label2:
	' * Return
	pusha	11
	pusha	25
	loadi
	pushi	0
	muli
	addi
	pusha	23
	loadi
	pushi	2
	muli
	addi
	loadi
	ret	2, 0, 4
label3:
# line 60
fill:
	' * Parameters
	' * IntType value (offset 27)
	' * Local variables
	' * IntType i (offset 29)
	' * IntType j (offset 31)
	enter	4
	' * Assignment
	pusha	29
	pushi	0
	storei
	' * While
label4:
	pusha	29
	loadi
	pusha	9
	loadi
	lti
	jz	label5
	' * Assignment
	pusha	31
	pushi	0
	storei
	' * While
label6:
	pusha	31
	loadi
	pusha	9
	loadi
	lti
	jz	label7
	' * Invocation
	pusha	29
	loadi
	pusha	31
	loadi
	pusha	27
	loadi
	call	setValue
	' * Assignment
	pusha	31
	pusha	31
	loadi
	pushi	1
	addi
	storei
	jmp	label6
label7:
	' * Assignment
	pusha	29
	pusha	29
	loadi
	pushi	1
	addi
	storei
	jmp	label4
label5:
	ret	0, 4, 2
# line 79
show:
	' * Parameters
	' * Local variables
	' * IntType i (offset 33)
	' * IntType j (offset 35)
	enter	4
	' * Assignment
	pusha	33
	pushi	0
	storei
	' * While
label8:
	pusha	33
	loadi
	pusha	9
	loadi
	lti
	jz	label9
	' * Assignment
	pusha	35
	pushi	0
	storei
	' * While
label10:
	pusha	35
	loadi
	pusha	9
	loadi
	lti
	jz	label11
	' * If
	pusha	35
	loadi
	pusha	9
	loadi
	nei
	pushi	1
	subi
	jz	label12
	jmp	label13
label12:
label13:
	' * Assignment
	pusha	35
	pusha	35
	loadi
	pushi	1
	addi
	storei
	jmp	label10
label11:
	' * Assignment
	pusha	33
	pusha	33
	loadi
	pushi	1
	addi
	storei
	jmp	label8
label9:
	ret	0, 4, 0
# line 102
main:
	' * Parameters
	' * Local variables
	' * ArrayType size: 1 characters (offset 37)
	enter	0
	' * Assignment
	pusha	9
	pushi	10
	storei
	' * Invocation
	pushi	1
	call	fill
	' * Invocation
	pushi	5
	pushi	5
	pushi	5
	call	setValue
	' * Assignment
	pusha	2
	pushi	5
	pushi	5
	call	getValue
	storei
	' * If
	pusha	2
	loadi
	pushi	5
	eqi
	jz	label14
	jmp	label15
label14:
label15:
	' * Invocation
	call	show
	' * Assignment
	pusha	5
	pushf	4.5
	pushi	4
	addf
	storef
	ret	0, 0, 0
