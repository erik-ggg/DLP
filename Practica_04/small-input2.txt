4+5*8;
a[1]:int;
a[][]:char;
sensor, sensorAux : char;
def fun1(param1, param2 : int) : void {}
def fun2(param1 : int, param2 : double) : double {
    sensor, sensorAux : char;
    4+5*8;
    return sensor;
}
a = 4+5;
b = (double)a;

# Variable and function definitions
i, j, n : char;
c : double;

# Empty function
def p() : char { }

def f(n : int, r :double ) : char {
  	real : int;
  	c1, c2 : double;
	c1 = (char)n;
  	real = c1 + n + r;
  	# p(); # Invocation as a statement
  	return (int)c1;
}

while (a < a && a > b || a >= c && a <= b) :  {

}

if (a > b) :
    a+5;

if (a >= b) : {
    a+5;
    while (b > c) : {
        def f(param : char): void{
            b = 4 * a;
            func();
            func(a);
            func(a, b);
            func(a, b, c);
            func(param, 5, 23,as);
        }
    }
}
i(param1, (double)param2);
print a;
print f(i, (double)i); # Invocation as an expression

if (a >= b) : {
    a+5;
    while (b > c) : {
        def f(param: int) :void {
            a[1][3] = 5;
            b = p();
            c[1][1] = p();
        }
    }
} else {
    b = 4 * a;
}

if (a >= b) : {
    a+5;
    while (b > c) : {
        def f(param: char): void{
            print a+5;
        }
    }
} else
    b = 4 * a;
ar3[][] = (int)f(5);
j.c;
j.c = 'c';
j.c.c = e(5, a, 8);
j.c.c = e(5, a, a[2][1]);
j.c.c = e(5, a, a[][]);
j.c.c = e(5, a, a[]);
j.c.c = e(5, a, a[2]);

j[1].c;
j[1][1].c;
j[1].c[1].h;
j[1][1].c[1][1].h;

j[].c;
j[][].c;
j[].c[].h;
j[][].c[][].h;

j[a].c;
j[a][a].c;
j[a].c[b].h;
j[a][c].c[a][2].h;


a,b,c : struct {
    a: int;
};

a,b,c : struct {
    a: int;
};

a,b,c : struct {
    a: int;
};

# Variable and function definitions
i, j, n: int;
c: char;

# Empty function
def p(): void { }

def f(n: int,r: double): int {
  	real: double;
  	c1, c2: char;
	c1 = (char)n;
  	real = c1 + n + r;
  	p(); # Invocation as a statement
  	return (int)c1;
}

def main(): void {
	# Record
  	pair: struct {
    	integer: int;
    	character: char;
  	};
  	# Array
  	vector: [10][5]double;

  	i=0;
  	j=0;
  	while i<10 : {
    	while j<5 : {
      		vector[i][j] = i + j;
      		j=j+1;
		}
		i=i+1;
  	}
  	i=0;
	pair.character = '0';
  	pair.integer = '0';
  	# a == 2
  	while true && vector[1]: {
  	    a%2 = 2;
  	    if (!pair.integer || true != false && a%2 == 2) :
          	    i = pair.integer;
  	}

    if pair.integer == vector[0][0] || !pair.character || i%2==0 : {
        a = true;
    }

  	while pair.integer >= i: {
    	if pair.integer == vector[0][0] || !pair.character || i%2==0 :
    	    a = 4;
      		# print 't', 'r', 'u', 'e', '\n';
    	else
    	    a = 7;
      		# print 'f', 'a', 'l', 's', 'e', '\n';
    	i=i+1;
  	}
  	prueba = vector[1][(int)1.6];
  	print f(i, (double)i); # Invocation as an expression
  	vector[9][(int)4.3] = 5.6;
  	f(1, 2.2); # Invocation as a statement
}